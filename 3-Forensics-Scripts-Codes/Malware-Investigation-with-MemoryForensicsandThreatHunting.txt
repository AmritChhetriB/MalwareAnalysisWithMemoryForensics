			Malware Investigation with Memory Forensics and Threat Hunting
		Instructor/Consultant: Amrit Chhetri, Quantum-Safe Security Researcher
			--------------------------------------------------------------

1. Evidence Samples:
	1. OSS Malware Sample		: R2D2, https://github.com/volatilityfoundation/volatility/wiki/Memory-Samples
	2. Local Windows Sandbox	: Memory Image of Windows 2016 Server acquired using FTK Imager

2.Configuration   :
	

2. Volatility Plugins:
	1. Volatility Standalone:	
		1. Extracting Remote Connections: volatility -f Evidence.vmem --profile=WinXPSP2x86 connscan, 1956
		2. Extracting Malware: volatility -f Evidence.vmem --profile=WinXPSP2x86 procdump -p 1956 --dump-dir .
				
				
		All Plugins:
		Image Info		: volatility -f Evidence.vmem imageinfo
		Running Process : volatility -f Evidence.vmem --profile=WinXPSP2x86 pslist
		Parent and Child Process: volatility -f Evidence.vmem --profile=WinXPSP2x86 pstree
		Hiding Process Analysis: volatility -f Evidence.vmem --profile=WinXPSP2x86 psxview
		Connections: volatility -f Evidence.vmem --profile=WinXPSP2x86 connscan
		Injection Details: volatility -f Evidence.vmem --profile=WinXPSP2x86 malfind
		Command Lines: volatility -f Evidence.vmem --profile=WinXPSP2x86 cmdline
		Dumping Process: volatility -f Evidence.vmem --profile=WinXPSP2x86 procdump -p 1956 --dump-dir .
		
				
	2. Yara and Volatility:
		1. volatility -f Evidence.vmem --profile=WinXPSP2x86 yarascan -p 1956 -Y "https"
		2. volatility -f Evidence.vmem --profile=WinXPSP2x86 yarascan -Y "172.16.98.1"
		
		
		All Plugins with Yara:		
		1. volatility -f Evidence.vmem --profile=WinXPSP2x86 yarascan -Y "https:"		
		2. volatility -f Evidence.vmem --profile=WinXPSP2x86 yarascan -p 1956 -Y "http:"
		3. volatility -f Evidence.vmem --profile=WinXPSP2x86 yarascan -Y "com"
		4. volatility -f Evidence.vmem --profile=WinXPSP2x86 yarascan -Y "172.16.98.1"
		5. volatility -f Evidence.vmem --profile=WinXPSP2x86 yarascan --yara-file=MalwareAnalysis-Evidence.yara	
		
		
		
		
Threat Hunting in Digital Forensics:
	1. . Malware and Encoding Hunting: 
		
Updating steps, Tools and Procedures to my Forensics Books:
----------------------------------------------------------
	
	
Tools -
	1. Imagers(Forensics Images):
	2. Forensic Use Cases		:
	3. Memory Forensics(Tools)	:
			1. APT-Hunter: https://github.com/ahmedkhlief/APT-Hunter
			2. CyberChef : https://gchq.github.io/CyberChef/
	4. Reverse Engnieering Tools:



4. 03. Threat Hunting :
	1. Definition:	
		1. The practice of proactively searching for cyber threats
		2. IBM Says, 80% Threats are detected/mitigated by CSOC Tier 1 and 2 Experts
		3. 20 % Threats remain undected and Threat Hunting supports protection from them
		4. Threat Hunting Steps:
			1. Step 1: Trigger - Information Gathering (winevt)
			2. Step 2: Investigations - Reviewing Systems and Invetigations (APT-Hunter)
				1. Automated - LogRhythm 
				2. Manual 
			3. Step 3: Resolution-  Findings are communicated to Security Team or Security Tools or Foerensic Team	
		5. Methodologies: https://www.exabeam.com/explainers/information-security/threat-hunting-tips-and-tools/
			1. IOA-Based : TTP
			2. Hypothesis : Data Analytics
			3. Intelligence : Threat Intelligence Platform( STIX)
					1. https://oasis-open.github.io/cti-documentation/stix/example
	2. Threat Hunting vs Threat Detection
		1. The practice of proactively searching for cyber threats
		2. Identification potential threats and reacting to them before they impact the business
	
	3. GTFO Bins based Techniques	:	
		1. GTFO Bins are Unix binaries for bypassing local security restrictions 
		2. List of GTFO Bins, git clone https://github.com/GTFOBins/GTFOBins.github.io.git
		3. Searching These Files on Linux Systems
		
	4. Malware Campaigns & APTs for Deteciton
		1. APT-Hunter
	
	5. Hunting APTs with threat intelligence and EQL
		1. https://eqlplayground.io
	
	5. THreat Hunting Hypothesis and Methodology
		1. Hypothesis is is a statement of an idea or test against data
		2. It is informed assumption about a cyber-attack or any of its components
		3. It is used in 5W:		
			1. Who  : Organization/Individual
			2. What : Data Exfiltration . Cyber Economics
			3. When : On againing access, date =?, logic(APT)
			4. Where : Server, Desktop, IP=?, Location, IOT, OT
			5. Why   : Goals ....
			         1. Profiling Hackers/Organization, 
					 2. Comptetitive Intelligence, Annual Report, OSINT
					 3. Cyber Psychology/Cyber Forensic Psychology
					 4. Business/Personal Reputations 
			6. How: TTP, Vulnerability Intelligence
		
		3. Use of Hyptothesis :				
			1. Predicting adversary behavior
			2. Suggesting ways to find a threat
			3. Detecting anomalies
			4. Studying event correlation
			5. Testing samples in sandboxes, honey pots, and emulated environments
			6. Documenting results for Findings
			7. Improving the protection of assets and infrastructure
			8. Performing mitigation and Incodent Recovery
			
		4. Examples:
			1. Thteat Hunting Hypothesis #1:
			   Attackers that tried to gain initial access through a 
			   phishing email with lateral movement and privilege 
			   escalation for exfiltrate data .
			2. Threat Hunting Hypothesis #2:
			   
		5. References: https://socprime.com/blog/threat-hunting-hypothesis-examples/
		
	6. Threat Hunting Tools:
		1. By TOC: Wireshark, Network Miner
		2. Training: 
			1. Yara and Volatility - Threat from File Less Malware
			2. CyberChef(Web)
			3. BotDetection Tool: https://www.solarwinds.com/security-event-manager/use-cases/botnet-detection
	
	7. Sources of Threas and Tools:
		1. SIEM Tools - Business Systems and TP Systems
		2. Security Monitoring Tools(API, System, Network, Modesl,Datasets) - APT Hunting, Malware Hunting, Spearphishing Hunting
		3. Analytics Tools - Intelligence-Based
		4. SOAR Systems     
		5. MDR Systems     - Hyptesis Based
		
	7. Threat Hunting Demonstratio - with Top 5 Tools
		1. APT Hunter:  https://github.com/ahmedkhlief/APT-Hunter
		2. Monitoring Tools:
			1. Zeek/Bro: https://zeek.org/get-zeek/
			2. SIEM    : Splunk, ELK, AlentVault OSSIM
		3. Snort/Suricata(IDS/IPS)
		
				
1. Threat Hunting with CyberChef : Double Encoding URL - SQLInjection
	1. Get URL Encoded with Base 64 were circulated as part Phishign Email (aHR0cDovLzEyNy4wLjAuMS9EVldBL3Z1bG5lcmFiaWxpdGllcy9zcWxpLz9pZD0xJlN1Ym1pdD1TdWJtaXQj)
	2. Open CyberCheck and put code into Input and then use Magic Recipe
	3. Outout shows decoded URL with IOC of SQLi-( Threat Found) 
			Steps for SQLi( Just for Security Testing):
			python sqlmap.py -u "http://192.168.226.1/dvwa/vulnerabilities/sqli/?id=1&Submit=Submit" --cookie="PHPSESSID=ah6tfd21ho53d7nr219gucg524; security=low"  --dbs
			python sqlmap.py -u "http://192.168.221.1/dvwa/vulnerabilities/sqli/?id=1&Submit=Submit" --cookie="PHPSESSID=q34q8fg376b0i2rn5aiege2db1; security=low"  --dbs
			sqlmap -u "http://192.168.221.1/dvwa/vulnerabilities/sqli/?id=1&submit=submit" --cookie="security=low; security_level=0; PHPSESSID=q34q8fg376b0i2rn5aiege2db1" --dbs

	
	
	4. In Step 3: Communicating Threats
		1. Email to Internal Security Team
			1. Security Enhancement
			2. Forensic Investigation
			3. Incident Response
		2. Sharing in CTX( AlenValut OTX)
		
	5. Impact Analysis:
		1. Vulnerability Analysis - SQLi Vulnerability
		2. Exploitation using Kali Linus or SQLMap on WIndows, Security Enhancement 
		
2. Threats added by Steganogrpahy:
	1. Trigger: Get Worm encoded in image ( Steganograhy) identified by SIEM by Monitoring Tool(IDS/IPS)
	3. Analysis:
		1. Using VirusTotal: None
		2. Using OpenStego : Got message, message.txt and found <a href ="aHR0cDovLzEyNy4wLjAuMS9EVldBL3Z1bG5lcmFiaWxpdGllcy9zcWxpLz9pZD0xJlN1Ym1pdD1TdWJtaXQj"> Here</a>
	4. The URL is encoded, use CyberChef to decode
	5. Plan Text with SQLi Threat is identified ....
	
3. APT Hunting using OSS APT Hunter- MITRE Att&ck
	1. Security Analysts or SIEM/Systems/CTX alerted for APT-X
	1. Get or load event logs form C:\Windows\System32\winevt\Logs
	2. python APT-Hunter.py  -p /Security.evtx -o Project2
	3. Check for Summary and peform further hunting
	4. More References: https://github.com/ahmedkhlief/APT-Hunter
	
	
4. Malware/Trojan Hunting:
	1. Create APT Port Playbook/Collection	
		Port=5944, 6666, 7777, 14146
	2. Use SIEM or Sniff Network/Monitor Network for Network logs
		1. Wireshark - short period of time
		2. Zeek/Bro
		3. SIEM
		4. Sniffers: tcpdump
	3. Process Monitring using ProcessHacker, TCPView
	4. Analyze suspicious ports using Wireshark using Filter
	
5. Threat Hunting with SIEM - Splunk and QRadar
	1. QRadar : SIEM from IBM, https://www.ibm.com/community/101/qradar/ce/
	                           Installtion Guide: https://www.ibm.com/community/qradar/wp-content/uploads/sites/5/2020/11/b_qradar_community_edition_7.3.3GA_v1.0.pdf
							   https://localhost.localadmin:8444/console	
	
	2. Splunk         : https://www.splunk.com/en_us/download/splunk-enterprise.html
	3. AlenVault OSSIM: https://cybersecurity.att.com/products/ossim/download
	
	
		------------------------------------------------------------------------------------------
05: Revision Labs:
	1. Packet Analysis using -Splunk, Wireshark and Capsa Network Analyzer
	2. Designing Alerts in Splunk	
	
06: Advanced Approcahes for Threat Hunting: - one examples
	1. Digital Twins as Tool of Threat Hunters		
	2. Use of Threat Modeling in Threat Hunting ( CTI+CTM+CTH= Effective Approach)
	3. Modern Technology in Threat Hunting and CSOC:
		1. AI/ML for Threa Detetction
		2. AI/ML Digital Forensics  :
		3. AI/ML in Malware Analysis
	4. Roles of Quantum Computing and QML in Automation of Modern CSOC
		1. Present and
		2. Future
		
		
		
Memory Analysis using Memoryze:
1. Acquiring Memory Image: MemoryDD.bat -output C:\MANDIANT or MemoryDD.bat AcquireMemory.Batch.xml -output /MemoryImage
2. Processing Memory Image: ProcessDD.bat -input C:\MANDIANT\windows2019.img -ports true -output C:\outputs



		
Memory Analysis using RedLine:

 Acquiring Driver Image: DriverDD.bat AcquireDriver.Batch.xml -output /DriverImage
3. Live Memory Analysis: ProcessDD.bat AcquireProcessMemory.Batch.xml -output 


C:\AUTOMATIONS-AI-CS-DFIR SCRIPTS\Digital-Forensics\MANDIANT\Memoryze\
3. 